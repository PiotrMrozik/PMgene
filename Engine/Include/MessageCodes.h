#pragma once

namespace PMgene::Core
{
	typedef enum MessageCodes
	{
		//INFO
		MC_ENTITY_CREATED,
		MC_ENTITY_DESTROYED,
		MC_ENTITY_SIGNATURE_CHANGED,
		MC_ENTITY_MAX_LIMIT_REACHED,

		//COMMAND
		MC_CREATE_ENTITY,
		MC_DESTROY_ENTITY,
		MC_CHANGE_ENTITY_SIGNATURE,

		//INFO
		MC_COMPONENT_REGISTERED,
		MC_COMPONENT_REMOVED_FROM_ENTITY,
		MC_COMPONENT_ADDED_TO_ENTITY,

		//COMMAND
		MC_REGISTER_COMPONENT,
		MC_REMOVE_COMPONENT,
		MC_ADD_COMPONENT_TO_ENTITY,

		//INFO
		MC_SYSTEM_REGISTERED,
		MC_SYSTEM_REMOVED,

		//COMMAND
		MC_REGISTER_SYSTEM,
		MC_REMOVE_SYSTEM,

		//INFO
		MC_MANAGER_INITIALIZED,

		MessageCodesCount

	} MessageCode;

	inline const char* to_string(MessageCode e)
	{
		switch (e)
		{
		case MC_ENTITY_CREATED: return "MC_ENTITY_CREATED";
		case MC_ENTITY_DESTROYED: return "MC_ENTITY_DESTROYED";
		case MC_ENTITY_MAX_LIMIT_REACHED: return "MC_ENTITY_MAX_LIMIT_REACHED";
		case MC_COMPONENT_REGISTERED: return "MC_COMPONENT_REGISTERED";
		case MC_COMPONENT_REMOVED_FROM_ENTITY: return "MC_COMPONENT_REMOVED_FROM_ENTITY";
		case MC_COMPONENT_ADDED_TO_ENTITY: return "MC_COMPONENT_ADDED_TO_ENTITY";
		case MC_SYSTEM_REGISTERED: return "MC_SYSTEM_REGISTERED";
		case MC_SYSTEM_REMOVED: return "MC_SYSTEM_REMOVED";
		case MC_MANAGER_INITIALIZED: return "MC_MANAGER_INITIALIZED";
		case MessageCodesCount: return "MessageCodesCount";
		}
		return nullptr;
	}
}
